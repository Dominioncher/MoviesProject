services:
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloakdb
    ports:
      - 8080:8080

  keycloakdb:
    image: postgres:latest
    container_name: keycloakdb
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data
    volumes:
      - minio_storage:/data

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # cadvisor:
  #   image: google/cadvisor
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - "8082:8080"

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   ports:
  #     - 9100:9100
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'

  # loki:
  #   image: grafana/loki
  #   container_name: loki
  #   ports:
  #     - "3100:3100"

  # grafana:
  #   image: grafana/grafana-enterprise
  #   container_name: grafana
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

  oracle-db:
    image: gvenzl/oracle-xe
    environment:
      - ORACLE_PASSWORD=Oracle_123
      - APP_USER=video_rent
      - APP_USER_PASSWORD=video_rent
    ports:
      - 1521:1521
      - 58768:58768
      - 58769:58769
    volumes:
      - oracle-data:/opt/oracle/oradata
      - oracle-backup:/opt/oracle/backup
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  migrations:
    image: dominioncher/migrationservice
    environment:
        - DBProvider=Oracle
        - Host=oracle-db:1521/XEPDB1
        - User=video_rent
        - Password=video_rent
    volumes:
      - ./migrations:/etc/migrations
    depends_on:
      oracle-db:
        condition: service_healthy

volumes:
  minio_storage:
  pgdata:
  keycloak_pgdata:
  grafana-storage:
  oracle-data:
  oracle-backup:
  
networks:
  default:
    name: movie_application