ALTER TABLE VIDEO_RENT.MOVIES  
ADD(
deleted_date DATE,
deleted_by VARCHAR2(100),
created_at DATE DEFAULT SYSDATE,
updated_at DATE DEFAULT SYSDATE
);


CREATE OR REPLACE VIEW VIDEO_RENT.MOVIES_VIEW 
AS
SELECT ID, TITLE, DESCRIPTION, PHOTO, LANGUAGE, RELEASE_DATE, RUN_TIME 
FROM VIDEO_RENT.MOVIES 
WHERE deleted_by IS NULL;


CREATE OR REPLACE VIEW VIDEO_RENT.TOP_10_MOVIES_VIEW 
AS
SELECT ID, TITLE, PHOTO, s.VIEWS_COUNT
FROM VIDEO_RENT.MOVIES_VIEW m
LEFT JOIN VIDEO_RENT.movies_statistics s ON m.id = s.movie_id
ORDER BY s.views_count DESC nulls last
FETCH FIRST 10 ROWS ONLY;


CREATE OR REPLACE PROCEDURE VIDEO_RENT.DELETE_MOVIE (p_movie_id NUMBER, p_user_oid VARCHAR2) 
AS  
BEGIN	
	UPDATE VIDEO_RENT.MOVIES
	SET 
	deleted_date = SYSDATE, 
	deleted_by = p_user_oid
	WHERE ID = p_movie_id;	
END;


CREATE OR REPLACE TRIGGER trigger_update_movie
BEFORE UPDATE
ON VIDEO_RENT.MOVIES
FOR EACH ROW
DECLARE
BEGIN
	:NEW.updated_at := SYSDATE;
END;

